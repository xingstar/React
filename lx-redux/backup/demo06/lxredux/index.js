/*
 * @Author: ministar 
 * @Date: 2019-08-29 09:59:48 
 * @Last Modified by: ministar
 * @Last Modified time: 2019-09-06 21:32:55
 */
// Â¢ûÂä†ÁöÑÁÇπÔºö replaceReducer Â∞±ÊòØ‰πãÂâçreducerÂÜôÂ∞ë‰∫ÜÔºåÊ≤°ÊúâÊÉ≥ÂÜôÈÇ£‰πàÂ§öÔºåÂêéÊù•ÊúâËøΩÂä†ÔºåÂ∞±ÊääreducerÊõøÊç¢Êéâ
import {createStore, combineReducers, applyMiddleware} from './redux/index.js';
import couterReducer from './reducers/counter.js';
import infoReducer from './reducers/info.js';

// Ë¶ÅÂºïÂÖ•‰∏≠Èó¥‰ª∂‰∫ÜÔºå‰∏≠Èó¥‰ª∂ÊòØÂØπ dispatch ÁöÑÂ¢ûÂº∫ÔºåÂ∞±ÊòØÊúÄÂêéËøîÂõûÁöÑËøòÊòØdispatchÔºåÊé•Êî∂ÁöÑËøòÊòØactionÁöÑÂèÇÊï∞
import loggerMiddleWare from './middleWare/loggerMiddleWare.js';
import timerMiddleWare from './middleWare/timerMiddleWare.js'



// let initState = {
//     counter:{
//         count:0
//     },
//     info:{
//         name:'',
//         description:''
//     }
// };

let reducer =  combineReducers({
    counter: couterReducer,
    info: infoReducer
});

const rewriteCreateStoreFunc = applyMiddleware(timerMiddleWare, loggerMiddleWare);
let store = createStore(reducer,{}, rewriteCreateStoreFunc);

// let nextReducer = combineReducers({
//     counter: couterReducer,
//     info: infoReducer
// });

// store.replaceReducer(nextReducer); // ËøõË°åÊõøÊç¢ÁöÑÊó∂ÂÄôÔºåÊòØ‰ºöÊäästateÈÉΩÂêàÂπ∂‰∏Ä‰∏ãÂ≠êÁöÑÔºåËøôÊòØÂøÖÈ°ªÁöÑ
// Ëé∑ÂèñÂΩìÂâçÈªòËÆ§Áä∂ÊÄÅËØï‰∏ÄÊää
// console.log('ÂΩìÂâçÈªòËÆ§ÂÄº', store.getState());

// ËøõË°åËÆ¢ÈòÖ
store.subScribe(() => {
    let state = store.getState();
    console.log('üçé', state);
})
store.dispatch({
    type:'INCREMENT'
});
store.dispatch({
    type:'NAME',
    value:'Âº†‰∏â'
})